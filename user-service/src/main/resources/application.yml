server:
  port: 0

spring:
  application:
    name: user-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  datasource:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3316/mydb?serverTimezone=Asia/Seoul&useSSL=false
      username: root
      password: users
  data:
    mongodb:
      host: localhost
      port: 27117
      authentication-database: admin
      username: user_user
      password: user_password
      database: mydb
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    generate-ddl: false

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true # periodically get recent information from eureka server
    service-url: # register itself to eureka server end point
      defaultZone: http://localhost:8761/eureka

#greeting:
#  message: Welcome to the Simple E-commerce.

logging:
  level:
    com.example.userservice.client: DEBUG
#  pattern:
#    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3_MULTI
    zipkin:
      tracing:
        endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

token:
  expiration_time: 86400000 # 24 * 60 * 60 * 1000
  secret: user_token

gateway:
  ip: 172.18.0.3

# Env for RestTemplate & Error Decoder
order_service:
  url: http://ORDER-SERVICE/order-service/%s/orders
  exception:
    orders_is_empty: There is no item.