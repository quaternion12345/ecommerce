server:
  port: 0

spring:
  application:
    name: user-service
#  zipkin:
#    base-url: http://127.0.0.1:9411
#    enabled: true
#  sleuth:
#    sampler:
#      probability: 1.0
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: jdbc:h2:mem:testdb
#    username: sa
#    password: 1234
  jpa:
    hibernate:
      ddl-auto: create-drop

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true # periodically get recent information from eureka server
    service-url: # register itself to eureka server end point
      defaultZone: http://localhost:8761/eureka

greeting:
  message: Welcome to the Simple E-commerce.

logging:
  level:
    com.example.userservice.client: DEBUG
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3_MULTI
    zipkin:
      tracing:
        endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

#token:
#  expiration_time: 86400000 # 24 * 60 * 60 * 1000
#  secret: user_token